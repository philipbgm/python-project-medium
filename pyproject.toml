[tool.poetry]
name = "example_app"
version = "0.1.0"
description = ""
homepage = "https://github.com/philipbgm/python-project-medium.git"
repository = "https://github.com/philipbgm/python-project-medium.git"
license = "MIT"
authors = ["philipbgm <74136689+philipbgm@users.noreply.github.com>"]
readme = "README.md"
#packages = [{include = "example_app"}]


[tool.poetry.dependencies]
python = "^3.12"
httpx = "^0.28.1"
fastapi = "^0.115.6"
uvicorn = {extras = ["standard"], version = "^0.34.0"}

[tool.poetry.group.lint.dependencies]
flake8 = "^7.1.1"
black = "^24.10.0"

[tool.poetry.group.test.dependencies]
pytest-cov = "^6.0.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.1"
mkdocs-material = "^9.5.49"
mkdocstrings = {extras = ["python"], version = "^0.27.0"}





[tool.poetry.group.semver.dependencies]
python-semantic-release = "^9.15.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.report]
exclude_lines = [
    'if __name__ == "__main__":'
]

[tool.pytest.ini_options]
testpaths = ["src", "tests"]
addopts = "-p no:cacheprovider" # deactivating pytest caching.


[tool.semantic_release]
branch = "main"
version_variable = ["src/example_app/__init__.py:__version__"]
version_toml = ["pyproject.toml:tool.poetry.version"]
version_source = "tag"
commit_version_number = true # required for version_source = "tag"
tag_commit = true
upload_to_pypi = false
upload_to_release = false
hvcs = "github" # gitlab is also supported
commit_message = "{version} [skip ci]" # skip triggering ci pipelines for version commits
